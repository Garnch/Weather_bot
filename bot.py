import telebot
import requests  # for work with HTTP
import json
from telebot import types

bot = telebot.TeleBot('7175628286:AAEDNBOaAayGrswbOYnemasT-1WujWSFGA4')
API = 'ea9ba49e45d4950c4eab0069ac547572'

user_state = {}


@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ–≥–æ–¥—É!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_weather(message):
    if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É–∞ –≤–æ–∑–¥—É—Ö–∞ üå°')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è üå¨')
        btn3 = types.KeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìö')
        markup.row(btn1, btn2)
        markup.row(btn3)
        bot.send_message(message.from_user.id, '–ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å ?', reply_markup=markup)

    elif message.text == '–¢–µ–º–ø–µ—Ä–∞—Ç—É–∞ –≤–æ–∑–¥—É—Ö–∞ üå°':
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞üèôÔ∏è –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—Éüå§Ô∏è")
        user_state[message.from_user.id] = 'awaiting_city'

    elif user_state[message.from_user.id] == 'awaiting_city':
        if user_state[message.from_user.id] == 'awaiting_city':
            city = message.text.strip().lower()
            weather = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
            data = json.loads(weather.text)
            if 'main' in data:
                bot.reply_to(message, f'C–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {data["main"]["temp"]} ¬∞C')
            else:
                bot.reply_to(message, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –ø–æ–≥–æ–¥—É –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')

            user_state[message.from_user.id] = None

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É–∞ –≤–æ–∑–¥—É—Ö–∞ üå°')
        btn2 = types.KeyboardButton('–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è üå¨')
        btn3 = types.KeyboardButton('–í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìö')
        markup.row(btn1, btn2)
        markup.row(btn3)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:', reply_markup=markup)

        user_state[message.from_user.id] = None

    else:
        bot.send_message(message.from_user.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")



bot.polling(non_stop=True)

